@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Newskalo.MVC.ViewModels.CategoryViewModel>

<h3>List of vehicle makes</h3>
<p>
    @Html.ActionLink("New", "Create", "Categories")
</p>

@using (Html.BeginForm("Index", "Home"))
{
    <label>Search by name:</label>
    <input type="text" name="search" value="@ViewBag.search" />

    <label>Sort:</label>
    <select name="sort">
        <option value="Title" @(ViewBag.sort == "Title" ? "selected" : "")>
            Title
        </option>
        <option value="Desc" @(ViewBag.sort == "Desc" ? "selected" : "")>
            Desc
        </option>
    </select>

    <label>Direction:</label>
    <select name="direction">
        <option value="Ascending" @(ViewBag.direction == "Ascending" ? "selected" : "")>
            Ascending
        </option>
        <option value="Descending" @(ViewBag.direction == "Descending" ? "selected" : "")>
            Descending
        </option>
    </select>

    <input type="submit" value="Search" />
    <br />
}

<table class="table">
    <tr>
        <th>
            Title:
        </th>
        <th>
            Desc:
        </th>
        <th></th>
    </tr>
    @foreach (var m in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(item => m.CategoryTitle)
            </td>
            <td>
                @Html.DisplayFor(item => m.CategoryDescription)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", "Categories", new { id = m.Id }, null) |
                @Html.ActionLink("Delete", "Delete", "Categories", new { id = m.Id }, null)
            </td>
        </tr>
    }
</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = ViewBag.search, sort = ViewBag.sort, direction = ViewBag.direction }))